variables:
  # NOTE: Custom variables should never start with CI_ prefix.
  #       This namespace belongs to Gitlab CI/CD.
  #       https://docs.gitlab.com/ee/ci/variables/predefined_variables.html
  GOLANG_VERSION:
    value: "1.22.4"
    description: "Go version to use for building and testing"
  IMAGE_GOLANGCI_VERSION:
    value: "v1.60"
    description: "Version of image golangci/golangci-lint for static checks"
  RULES_CHANGES_COMPARE_TO_REF:
    value: "refs/heads/main"
    description: "Which reference to compare rules about changes (usually set by push option)"

include:
  - project: "Northern.tech/Mender/mendertesting"
    file: ".gitlab-ci-check-commits.yml"
  - project: "Northern.tech/Mender/mendertesting"
    file: ".gitlab-ci-github-status-updates.yml"

stages:
  - build
  - test

.dind-login: &dind-login
  - mkdir -p $HOME/.docker && echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json

build:dist:
  image: golang:${GOLANG_VERSION}
  stage: build
  rules:
    - when: never
  tags:
    - hetzner-amd-beefy
  script:
    - make -C backend build
  after_script:
    - tar -zcvf dist.tar.gz dist/
  artifacts:
    expire_in: 1w
    when: always
    paths:
      - dist.tar.gz

test:backend:static:
  stage: test
  needs: []
  rules:
    - changes:
        paths: ["backend/**/*.go"]
        compare_to: "${RULES_CHANGES_COMPARE_TO_REF}"
  image: "golangci/golangci-lint:${IMAGE_GOLANGCI_VERSION}"
  script:
    - cd backend
    - golangci-lint run -v

test:unit:
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/golang:${GOLANG_VERSION}-bullseye
  stage: test
  rules:
    - when: never
  tags:
    - hetzner-amd-beefy
  services:
    - name: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/mongo:6.0
      alias: mongo
  variables:
    MONGODB_DEBIAN_RELEASE: "bullseye"
    MONGODB_VERSION: "6.0"
    TEST_MONGO_URL: "mongodb://mongo"
    WORKFLOWS_MONGO_URL: "mongodb://mongo"
  before_script:
    # mongodb-org package needs systemd, this circumnavigates the issue providing a fake systemctl command
    - ln -s /bin/true /usr/sbin/systemctl
    # install mongodb for the tests that use it locally
    - curl -fsSL https://www.mongodb.org/static/pgp/server-${MONGODB_VERSION}.asc | gpg -o /usr/share/keyrings/mongodb-server-${MONGODB_VERSION}.gpg --dearmor
    - echo "deb [ signed-by=/usr/share/keyrings/mongodb-server-${MONGODB_VERSION}.gpg ] http://repo.mongodb.org/apt/debian ${MONGODB_DEBIAN_RELEASE}/mongodb-org/${MONGODB_VERSION} main" | tee /etc/apt/sources.list.d/mongodb-org-${MONGODB_VERSION}.list
    - apt-get -qq update
    - apt-get install -qy mongodb-org
  script:
    - make -C backend test-unit

test:acceptance:
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/docker:26-cli
  stage: test
  rules:
    - when: never
  tags:
    - hetzner-amd-beefy
  services:
    - name: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/docker:26-dind
      alias: docker
  needs:
    - job: build:dist
      artifacts: true
  before_script:
    - apk add make bash go git
    - tar -zxvf dist.tar.gz
    - make -C backend docker-acceptance
    - *dind-login
  script:
    - make -C backend test-acceptance

test:integration:
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/docker:26-cli
  stage: test
  rules:
    - when: never
  tags:
    - hetzner-amd-beefy
  services:
    - name: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/docker:26-dind
      alias: docker
  needs:
    - job: build:dist
      artifacts: true
  before_script:
    - apk add make bash git curl
    - tar -zxvf dist.tar.gz
    - *dind-login
  script:
    - make -C backend test-integration
  artifacts:
    expire_in: 1w
    when: always
    paths:
      - backend/logs.*
      - backend/results_integration_*.xml
      - backend/report_integration_*.html
    reports:
      junit: backend/results_integration_*.xml
