# Makefile.common initializes varialbes and common targets (build* test*)
# for all backend services.
MENDER_IMAGE_PREFIX ?= localhost:5000/mender-server
MENDER_IMAGE_TAG ?= $(MENDER_IMAGE_TAG_DEFAULT)

MENDER_IMAGE_TAG_TEST ?= test
MENDER_IMAGE_TAG_DEFAULT := latest

bindir ?= $(GIT_ROOT)/bin
binfile ?= $(bindir)/$(COMPONENT)

VERSION := $(shell git describe --tag --dirty 2>/dev/null)
GIT_ROOT := $(shell git rev-parse --show-toplevel)
MAKEDIR := $(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))
DOCFILES := $(wildcard docs/*_api.yml)

GOFILES := $(shell find -name '*.go' -not -name '_test.go')
GOTESTFILES := $(shell find -name '_test.go')
CGO_ENABLED ?= 0
GOARCH ?= $(shell go env GOARCH)
GOOS ?= $(shell go env GOOS)

TAGS ?= $(TAGS_DEFAULT)
LDFLAGS ?= -s -w
BUILDFLAGS ?= -trimpath
TESTFLAGS ?=
PYTEST_ARGS ?=

# Convert TAGS to a `-tags` BUILDFLAG by joining the list by comma.
_none :=
_space := $(_none) $(_none)
_comma := ,
BUILDFLAGS += $(let tags,$(TAGS),-tags=$(subst $(_space),$(_comma),$(tags)))

# DOCKER_PLATFORM default is defined with respect to the docker server.
# This fixes the default case on darwin where docker is running inside a VM (linux).
DOCKER_PLATFORM ?= $(shell docker system info -f ' \
	{{- .OSType}}/{{- if eq .Architecture "aarch64" -}} \
	  arm64 \
	{{- else -}} \
	  amd64 \
	{{- end -}} \
')
DOCKER_TAG = $(MENDER_IMAGE_PREFIX)/$(COMPONENT):$(MENDER_IMAGE_TAG)

.PHONY: docker
docker:
	docker build $(DOCKER_ARGS) \
		--platform $(DOCKER_PLATFORM) \
		-f Dockerfile \
		--build-arg BUILDFLAGS="$(BUILDFLAGS)" \
		--build-arg LDFLAGS="$(LDFLAGS)" \
		-t $(DOCKER_TAG) \
		$(GIT_ROOT)

$(binfile): $(GOFILES)
	# TODO: Add -ldflags "-X ...$(Version)"
	env CGO_ENABLED=$(CGO_ENABLED) \
		GOOS=$(GOOS) \
		GOARCH=$(GOARCH) \
		go build -o $(binfile) \
			-ldflags '$(LDFLAGS)' \
			$(BUILDFLAGS)

.PHONY: build
build: $(binfile)

.PHONY: dist
dist: bindir ?= $(GIT_ROOT)/bin/dist
dist: binfile ?= $(bindir)/$(COMPONENT)_$(VERSION)-$(GOOS)-$(GOARCH)
dist: $(binfile)

.PHONY: generate
generate:
	go generate ./...

.PHONY: test-unit
test-unit:
	go test $(BUILDFLAGS) $(TESTFLAGS) ./...

.PHONY: test
test: test-unit test-acceptance

.PHONY: docker-acceptance
docker-acceptance: export TAGS += acceptance
docker-acceptance: export BUILDFLAGS += -cover -installsuffix=.test
docker-acceptance: export MENDER_IMAGE_TAG_DEFAULT = $(MENDER_IMAGE_TAG_TEST)
docker-acceptance: docker

ifndef _no_include_acceptance_tests

test_acceptance_run_deps ?= docker-acceptance

.PHONY: test-acceptance-run
test-acceptance-run: $(test_acceptance_run_deps)
	MENDER_IMAGE_PREFIX=$(MENDER_IMAGE_PREFIX) \
		MENDER_IMAGE_TAG_TEST=$(MENDER_IMAGE_TAG_TEST) \
		docker compose -f tests/docker-compose.yml run \
			--remove-orphans \
			--rm \
			--use-aliases \
			acceptance-tester $(PYTEST_ARGS)

.PHONY: test-acceptance
test-acceptance: test-acceptance-run
		docker compose -f tests/docker-compose.yml down --remove-orphans -v

endif # _no_include_acceptance_tests
