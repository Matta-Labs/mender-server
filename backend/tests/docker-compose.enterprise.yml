include:
  - ../../dev/docker-compose.yml

services:
  acceptance-tester:
    scale: 0
    image: acceptance-tester
    build:
      context: .
      dockerfile_inline: |
        FROM python:3.12-slim
        COPY requirements-acceptance.txt requirements.txt
        RUN apt update && apt install -qy zstd wget && \
            wget "https://downloads.mender.io/repos/debian/pool/main/m/mender-artifact/mender-artifact_3.11.2-1%2bubuntu%2bjammy_amd64.deb" -O mender-artifact.deb && \
            dpkg -x mender-artifact.deb . && \
            pip install -r requirements.txt
        WORKDIR /testing
        ENTRYPOINT ["pytest"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    working_dir: /testing
    entrypoint:
      - pytest
      - --tb=long
    command: []
    depends_on:
      - mongo
      - nats
      - redis
      - workflows
      - workflows-worker

  integration-tester:
    scale: 0
    image: "${CI_REGISTRY_IMAGE:-localhost/backend-tester}:${CI_INTEGRATION_IMAGE_TAG:-integration}"
    build:
      dockerfile: Dockerfile.integration
    volumes:
        - ${MENDER_SERVER_PATH}/backend/tests/integration/docs:/docs
        - ${MENDER_SERVER_PATH}/backend/tests/integration/downloaded-tools/mender-artifact:/usr/local/bin/mender-artifact
        - ${MENDER_SERVER_PATH}/backend/tests/integration/tests:/tests
        - /var/run/docker.sock:/var/run/docker.sock
    command: ${PYTEST_ARGS}
    environment:
        PYTHONPATH: "/tests"
        PYTHONDONTWRITEBYTECODE: 1
        TESTS_IN_PARALLEL: ${TESTS_IN_PARALLEL}
        TENANTADM_STRIPE_API_KEY: ${STRIPE_API_KEY}
        GATEWAY_HOSTNAME: ${GATEWAY_HOSTNAME}
        AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
        AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
        AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
        AWS_EKS_CLUSTER_NAME: ${AWS_EKS_CLUSTER_NAME}
        AWS_IOTCORE_ACCESS_KEY_ID: ${AWS_IOTCORE_ACCESS_KEY_ID}
        AWS_IOTCORE_SECRET_ACCESS_KEY: ${AWS_IOTCORE_SECRET_ACCESS_KEY}
        AWS_IOTCORE_REGION: ${AWS_IOTCORE_REGION}
        AWS_IOTCORE_DEVICE_POLICY_NAME: ${AWS_IOTCORE_DEVICE_POLICY_NAME}
        AZURE_IOTHUB_CONNECTIONSTRING_B64: ${AZURE_IOTHUB_CONNECTIONSTRING_B64}
        AZURE_IOTHUB_MOCK: ${AZURE_IOTHUB_MOCK}
        GMAIL_ADDRESS: ${GMAIL_ADDRESS}
        GMAIL_PASSWORD: ${GMAIL_PASSWORD}
        K8S: ${K8S}
